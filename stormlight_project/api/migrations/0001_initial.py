# Generated by Django 5.1.7 on 2025-03-29 17:02

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('aliases', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, size=None)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RadiantOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('spren_type', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=200, unique=True)),
                ('total_pages', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('chapters_count', models.PositiveIntegerField(default=0)),
                ('total_words', models.PositiveBigIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('publication_date', models.DateField()),
                ('notes', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='books_as_flashback', to='api.character')),
            ],
            options={
                'ordering': ['publication_date'],
            },
        ),
        migrations.CreateModel(
            name='PoliticalEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('entity_type', models.CharField(choices=[('nation', 'Nación'), ('unclaimed_land', 'Tierra sin Nación'), ('city', 'Ciudad'), ('city_state', 'Ciudad Estado'), ('ocean', 'Oceano'), ('continent', 'Continente'), ('region', 'Región'), ('village', 'Pueblo'), ('fortress', 'Fortaleza'), ('island', 'Isla'), ('other', 'Otro')], db_index=True, default='other', max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('parent_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.politicalentity')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='character',
            name='political_entity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='citizens', to='api.politicalentity'),
        ),
        migrations.AddField(
            model_name='character',
            name='radiant_orders',
            field=models.ManyToManyField(blank=True, to='api.radiantorder'),
        ),
        migrations.CreateModel(
            name='RadiantPower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='radiant_powers', to='api.radiantorder')),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserFavorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('books', models.ManyToManyField(blank=True, related_name='favorited_by', to='api.book')),
                ('characters', models.ManyToManyField(blank=True, related_name='favorited_by', to='api.character')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('number', models.PositiveIntegerField()),
                ('part', models.PositiveIntegerField(blank=True, null=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='api.book')),
            ],
            options={
                'ordering': ['book', 'number'],
                'indexes': [models.Index(fields=['book', 'number'], name='api_chapter_book_id_4881fd_idx')],
                'unique_together': {('book', 'number')},
            },
        ),
        migrations.AddIndex(
            model_name='politicalentity',
            index=models.Index(fields=['name'], name='api_politic_name_0a2e10_idx'),
        ),
        migrations.AddIndex(
            model_name='politicalentity',
            index=models.Index(fields=['entity_type'], name='api_politic_entity__9e7242_idx'),
        ),
        migrations.AddIndex(
            model_name='character',
            index=models.Index(fields=['name'], name='api_charact_name_b23034_idx'),
        ),
        migrations.AddIndex(
            model_name='character',
            index=models.Index(fields=['political_entity'], name='api_charact_politic_0743fd_idx'),
        ),
        migrations.AddIndex(
            model_name='radiantpower',
            index=models.Index(fields=['name'], name='api_radiant_name_b816c8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='radiantpower',
            unique_together={('name', 'order')},
        ),
        migrations.AddIndex(
            model_name='userfavorite',
            index=models.Index(fields=['user'], name='api_userfav_user_id_eb2395_idx'),
        ),
    ]
